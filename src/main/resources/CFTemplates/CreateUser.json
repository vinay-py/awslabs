{
  "Description": "AWS CloudFormation sample template  Create an IAM User and optionally attach it to IAM group(s)",
  "Parameters": {
    "paramUserName": {
      "Description": "Unique name for a new user",
      "Type": "String",
      "ConstraintDescription": "User name must be between 1 and 64 alphanumeric characters in length, starting with an uppercase or lowercase character of the alphabet."
    },
    "paramUserPassword": {
      "Description": "Account password for a new user",
      "Type": "String",
      "NoEcho": "true",
      "AllowedPattern": "^[a-zA-Z][a-zA-Z0-9!@#$%&]{8,32}$",
      "ConstraintDescription": "Password must be between 8 and 32 characters, start with lowercase or uppercase letter, and can be alphanumeric with the following special characters !@#$%&"
    },
    "paramGroups": {
      "Description": "Comma-delimited list of group names  to which you want to add the user (optional)",
      "Type": "CommaDelimitedList",
      "Default": ""
    },
    "paramPath": {
      "Description": "IAM Path that you want to associate with the user",
      "Type": "String",
      "AllowedPattern": "(^\\/$)|(^\\/.*\\/$)",
      "Default": "/"
    },
    "paramTagValue": {
      "Description": "Tag value that identifies resources as a target for deployments",
      "Type": "String",
      "Default": "UserProvisioned",
      "AllowedPattern": "[\\x20-\\x7E]*",
      "ConstraintDescription": "Must contain only ASCII characters"
    }
  },
  "Conditions": {
    "hasGroups": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Fn::Join": [
                "",
                {
                  "Ref": "paramGroups"
                }
              ]
            },
            ""
          ]
        }
      ]
    }
  },
  "Resources": {
    "rnpuser": {
      "Type": "AWS::IAM::User",
      "Properties": {
        "UserName": {
          "Fn::Join": [
            "-",
            [
              "reviewnprep",
              {"Ref": "AWS::Region"},
              {"Ref": "paramUserName"}
            ]
          ]
        },
        "LoginProfile": {
          "Password": {
            "Ref": "paramUserPassword"
          },
          "PasswordResetRequired": true
        },
        "Path": {
          "Ref": "paramPath"
        },
        "Groups": {
          "Fn::If": [
            "hasGroups",
            {
              "Ref": "paramGroups"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "paramTagValue"
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "outputName": {
      "Description": "User name",
      "Value": {
        "Ref": "rnpuser"
      }
    },
    "outputArn": {
      "Description": "User ARN",
      "Value": {
        "Fn::GetAtt": [
          "rnpuser",
          "Arn"
        ]
      }
    }
  }
}